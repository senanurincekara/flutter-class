Features Katmanı Nedir?
Features, uygulamanın farklı özelliklerini (features) yönetmek için kullanılan bir katmandır.
Örneğin, home özelliği için dosyalar şurada olabilir:

lib/
 ├── features/
 │    ├── home/   # Ana özellik Home (Ana Sayfa)
 │    │    ├── data/
 │    │    │    ├── data_source/
 │    │    │    │    ├── local/     # Lokal veritabanı işlemleri
 │    │    │    │    ├── remote/    # API (Sunucu) işlemleri
 │    │    │    ├── model/          # Veri modelleri
 │    │    ├── presentation/        # UI (Görsel Arayüz) bileşenleri
 │    │    ├── repository/          # Veri erişim katmanı


📌 Data Katmanı (Veri Yönetimi)
Data katmanı veri işlemlerinin yapıldığı katmandır ve ikiye ayrılır:

Local (Lokal Veritabanı - Hive, SQLite vb.)
Remote (Sunucu - API, Firebase, HTTP vb.)
1️⃣ Local:
Lokal veritabanı işlemlerini yönetir.
HomeDataBaseService, Hive kullanarak cihazda veri saklar.
getAll(), insertItem(), isDataAvailable() gibi fonksiyonlar içerir.
2️⃣ Remote:
Sunucudan veri çekmek veya göndermek için API işlemleri yapılır.
dio veya http paketleri kullanılarak API'ye istek yapılır.
Örneğin, HomeRemoteService gibi bir sınıf olabilir.


📌 Model Katmanı (Veri Modelleri)
Data katmanı içinde bulunan ProductModel, uygulamanın kullanacağı veri yapısını temsil eder.
Bu model, hem local (Hive) hem de remote (API) işlemleri için kullanılır.


📌 Presentation Katmanı (UI & State Management)
Bu katmanda kullanıcı arayüzü ve state management (durum yönetimi) bulunur.

Flutter UI Widget'ları
Provider, Bloc, Riverpod gibi state management araçları
Verileri ekrana yazdıran ve kullanıcıdan giriş alan bileşenler



📌 Presentation/Home/Bloc Ne İşe Yarar?
Bloc (Business Logic Component), Flutter projelerinde state management (durum yönetimi) 
için kullanılan bir yaklaşımdır.
    UI (Kullanıcı Arayüzü) ile Veri Katmanını Ayırır
    State Yönetimi Sağlar
    Asenkron İşlemleri Yönetir
    Daha Modüler ve Test Edilebilir Kod Yazmanı Sağlar

📌 Bloc Yapısının Çalışma Mantığı
📌 1️⃣ UI bir olay gönderir (Event)
📌 2️⃣ Bloc bu olayı yakalar ve işler
📌 3️⃣ Bloc yeni bir durum (State) üretir
📌 4️⃣ UI güncellenir


